<?phpclass AdminController extends Zend_Controller_Action{	protected $userm;	protected $adminf;	protected $admintoolbarf;	public function init()	{		$this->_alert = $this->_helper->getHelper("FlashMessenger");		$this->userm = new Model_User();        $this->adminf = new Form_Admin();        $this->admintoolbarf = new Form_AdminToolbar();	}		public function indexAction()	{		$this->_redirect('/admin/list/');	}	public function addAction()	{	 	if($this->_request->isPost())        {        	if($this->adminf->isValid($_POST))        	{	            $result = $this->userm->create($this->_request->getPost(), 'administrator');	            if($result)	            {	            	exit($result);	                $this->_alert->addMessage(array("message"=>'<i class="icon icon-ok"></i> New admin user added.', "status"=>"success"));	                $this->_redirect("/admin/list/");	            }        	}        }		$this->view->form = $this->adminf;	}		public function listAction()	{		$url_params = '';    	$search = $this->_request->getParam('search', null);    	$page = $this->_request->getParam('page', 1);    	$params = array(    		'page'		=> $page,    		'condition'	=> array("`type` = 'administrator'")		);    	if($search != null)    	{    		$url_params .= '/search/'.$search;    		$params['condition'][] = "`username` LIKE '%".$search."%'";    		$this->admintoolbarf->search->setValue($search);    	}		if($this->_request->isPost())    		$this->_redirect('/admin/list'.$url_params.'/page/'.$page);    	$this->view->data = $this->userm->paginate($params);    	$this->view->form = $this->admintoolbarf;	}	public function deleteAction()	{		$id = $this->_request->getParam('id');		if($id)		{			$user = $this->userm->find($id)->current();			if($user)			{				$username = $user->username;				$user->delete();				$this->_alert->addMessage(array("message"=>'<i class="icon icon-trash"></i> Administrator "'.$username.'" deleted.', "status"=>"success"));			}		}		else		{			$this->_alert->addMessage(array("message"=>'<i class="icon icon-exclamation-sign"></i> Incorrect administrator ID.', "status"=>"error"));		}		$this->_redirect('/admin/list/');	}	public function resetPasswordAction()	{		$id = $this->_request->getParam('id');		if($id)		{			$user = $this->userm->find($id)->current();						$this->adminf->password->setLabel('New Password');			$this->adminf->repeat_password->setLabel('Confirm New Password');			$this->adminf->removeElement('username');						if($user)			{			 	if($this->_request->isPost())		        {		        	if($this->adminf->isValid($_POST))		        	{			            $result = $this->userm->change_password($this->_request->getParam('password'), $user->id);			            if($result)			            {			                $this->_alert->addMessage(array("message"=>'<i class="icon icon-ok"></i> Password reset succesful for "'.$user->username.'".', "status"=>"success"));			                $this->_redirect("/admin/list");			            }		        	}		        }								$this->adminf->populate($user->toArray());				$this->view->form = $this->adminf;				$this->view->user = $user;			}			else			{				$this->_alert->addMessage(array("message"=>'<i class="icon icon-exclamation-sign"></i> Invalid administrator ID.', "status"=>"error"));				$this->_redirect('/admin/list/');			}		}		else		{			$this->_alert->addMessage(array("message"=>'<i class="icon icon-exclamation-sign"></i> Incorrect administrator ID.', "status"=>"error"));			$this->_redirect('/admin/list/');		}	}}